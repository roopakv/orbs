description: |
  Send a webhook that workflow has started. This is currently in beta and uses
  the swissknife backend. To use this you need to have a swissknife API available
  from beta.swissknife.dev. Set your Swissknife api key in the SWISSKNIFE_API_KEY env
  variable.

  This command sends a webhook on workflow start. The swissknife backend de-dupes
  workflow start across various jobs and it is ok to have this step run from many jobs,
  only webhook will be posted to the destination.

  In order to have this webhook sent as early as possible, make this step as early as possible
  on the job.

  All webhooks are signed with the Signing key set in Swissknife.

parameters:
  destination:
    description: The URL where the webhook should be posted to.
    type: string
  fail-on-error:
    description: Fails this step on error otherwise, this is best effort
    type: boolean
    default: true

steps:
  - run:
      name: Swissknife Beta - Workflow started webhook
      command: |
        if [ -z "$BASH" ]; then
          echo Bash not installed.
          exit 1
        fi
        if [[ "$SWISSKNIFE_API_KEY" == "" ]]; then
          echo "Swissknife API key not set";
          exit 1;
        fi

        echo "Enqueing webhook"
        status_code=$(curl -s -o /tmp/swissknife_workflow.txt -w "%{http_code}" -X POST \
          https://beta.swissknife.dev/api/circle/webhooks/workflow.started \
          -H 'Content-Type: application/json' \
          -H 'User-Agent: Swissknife-Orb' \
          -H "Swissknife-Api-Key: $SWISSKNIFE_API_KEY" \
          -H 'cache-control: no-cache' \
          -d '{
          "workflow_id": "'$CIRCLE_WORKFLOW_ID'",
          "destination": "<< parameters.destination >>"
        }')
        cat /tmp/swissknife_workflow.txt
        echo ""
        <<# parameters.fail-on-error >>
        if (( $status_code > 399 )); then
          echo "Failed sending webhook";
          exit 1;
        fi
        <</ parameters.fail-on-error >>
        echo "Successfully sent"
